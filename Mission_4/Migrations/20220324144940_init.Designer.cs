// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission4.Models;

namespace Mission_4.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20220324144940_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Mission4.Models.applicationResponse", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Director")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Edited")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lent_To")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Rating")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.HasIndex("CategoriesCategoryId");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            Director = "Robert Zemeckis",
                            Edited = true,
                            Name = "Forest Gump",
                            Notes = "Great",
                            Rating = "PG-13",
                            Year = 1994
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 1,
                            Director = "Quentin Tarantino",
                            Edited = false,
                            Name = "Pulp Fiction",
                            Notes = "Great, but no Kids",
                            Rating = "R",
                            Year = 1994
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 4,
                            Director = "Ericson Core",
                            Edited = false,
                            Name = "Togo",
                            Notes = "Dog & Alaska",
                            Rating = "PG",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Mission_4.Models.Categories", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Horror/Suspense"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Miscellaneous"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Television"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "VHS"
                        });
                });

            modelBuilder.Entity("Mission4.Models.applicationResponse", b =>
                {
                    b.HasOne("Mission_4.Models.Categories", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesCategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
